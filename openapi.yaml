openapi: 3.0.0
info:
  title: Way-d Interactions API
  version: 1.0.0
  description: |
    API for likes, dislikes, matches, messages, and blocks in the Way-d dating app.
    
    **All endpoints require JWT authentication.**
    
    **Business Logic:**
    - Like: Creates a like, triggers match on mutual like, prevents duplicates/blocks.
    - Dislike: Records dislike, prevents future matches.
    - Match: Created automatically on mutual like, only active/unblocked matches are listed.
    - Message: Only allowed if match exists and not blocked.
    - Block: Blocks user, deletes all related likes, matches, messages, prevents further interaction.
servers:
  - url: http://localhost:8082/api
paths:
  /like:
    post:
      summary: Like a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_id:
                  type: string
      responses:
        '201': {description: Like created}
        '400': {description: Bad request}
        '403': {description: Blocked}
        '409': {description: Already liked/disliked}
  /dislike:
    post:
      summary: Dislike a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target_id:
                  type: string
      responses:
        '201': {description: Dislike created}
        '400': {description: Bad request}
        '403': {description: Blocked}
        '409': {description: Already disliked/liked}
  /matches:
    get:
      summary: List matches
      security:
        - bearerAuth: []
      responses:
        '200': {description: List of matches}
  /message:
    post:
      summary: Send message
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                match_id:
                  type: string
                content:
                  type: string
      responses:
        '201': {description: Message sent}
        '400': {description: Bad request}
        '403': {description: Blocked or not matched}
  /messages/{match_id}:
    get:
      summary: List messages for a match
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: match_id
          required: true
          schema:
            type: string
      responses:
        '200': {description: List of messages}
        '403': {description: Forbidden}
  /block:
    post:
      summary: Block a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blocked_id:
                  type: string
      responses:
        '201': {description: Block created}
        '400': {description: Bad request}
        '409': {description: Already blocked}
  /blocks:
    get:
      summary: List blocks
      security:
        - bearerAuth: []
      responses:
        '200': {description: List of blocks}

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
